{"version":3,"sources":["components/Tabs/Tabs.module.css","components/App.module.css","components/Search/Search.jsx","components/CurrentDay/CurrentDay.jsx","components/Tabs/Map/Map.jsx","components/Tabs/TabToday.jsx","components/Tabs/TabMoreDays.jsx","components/Tabs/Tabs.jsx","components/App.js","serviceWorker.js","index.js","components/CurrentDay/CurrentDay.module.css"],"names":["module","exports","tabsContainer","container","oneDay","button","containerTabMoreDays","itemTabMoreDays","containerMap","containerOneDay","serchContainer","wrapLoader","Search","_ref","getInput","react_default","a","createElement","onSubmit","type","name","placeholder","className","style","search","value","CurrentDay","location","text","iconURL","localtime","src","alt","width","height","google","window","withScriptjs","withGoogleMap","getInfo","lat","lng","cityName","country","lib","onClick","defaultZoom","center","MarkerWithLabel_default","position","labelAnchor","maps","Point","labelStyle","fontSize","fontWeight","backgroundColor","color","padding","borderRadius","TabToday","current","condition","temp_c","wind_kph","pressure_in","humidity","gust_kph","icon","Tabs_Map_Map","googleMapURL","loadingElement","containerElement","mapElement","TabMoreDays","forecastDays","map","item","key","date_epoch","day","date","maxtemp_c","mintemp_c","astro","sunrise","sunset","Tabs","state","today","moreDays","openModeDays","_this","setState","openToday","_this$props","this","props","_this$state","tabBlock","Tabs_TabToday","Tabs_TabMoreDays","Component","App","isLoading","numForecastDay","cityNameUpdate","e","preventDefault","console","log","target","city","updateWeather","getInfoFromMapClick","latLng","URL","concat","axios","get","then","response","data","lon","forecast","forecastday","catch","err","error","_this2","searchImage","_this3","IMAGE_URL","bgIMG","hits","largeImageURL","_this$state2","bg","react_loader_spinner_default","margin","components_Search_Search","components_CurrentDay_CurrentDay","Tabs_Tabs","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6aca602.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsContainer\":\"Tabs_tabsContainer__3Fk1X\",\"container\":\"Tabs_container__1vn5X\",\"oneDay\":\"Tabs_oneDay__2Z6hQ\",\"button\":\"Tabs_button__1kQf0\",\"containerTabMoreDays\":\"Tabs_containerTabMoreDays__sRtP9\",\"itemTabMoreDays\":\"Tabs_itemTabMoreDays__1Jcfk Tabs_oneDay__2Z6hQ\",\"containerMap\":\"Tabs_containerMap__IeOb1\",\"containerOneDay\":\"Tabs_containerOneDay__1DIA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2eljM\",\"serchContainer\":\"App_serchContainer__2Exo1\",\"wrapLoader\":\"App_wrapLoader__2xEM-\"};","import React from 'react';\r\nimport style from './Search.module.css';\r\n\r\nconst Search = ({getInput}) => (\r\n    <div>\r\n        <form onSubmit={getInput}>\r\n            <input type=\"search\" name=\"city\" placeholder=\"Enter city\"/> \r\n            <input className ={style.search} type=\"submit\" value=\"Найти\" />\r\n        </form>\r\n    </div>\r\n)\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport style from './CurrentDay.module.css';\r\n// import momentTime from 'moment-timezone';\r\n// import moment from 'moment';\r\n\r\n// const TimeZone = (localTime, timezome) => {\r\n//     let momentTime = moment(localTime);\r\n//     let tzTime = momentTime.tz(timezome);\r\n//     let formattedTime = tzTime.format('h:mm A');\r\n//     return formattedTime;\r\n// }\r\n\r\nconst CurrentDay = ({location, text, iconURL}) => (\r\n    <div className={style.container}>\r\n        <div className={style.oneDay}>\r\n        <div>\r\n            <h2>{location.name}</h2>\r\n            {/* <p>{TimeZone(location.localtime, location.tz_id)}</p> */}\r\n            <h2>{location.name}</h2>\r\n            <p>{location.localtime}</p>\r\n            <h4>{text}</h4>\r\n        </div>\r\n        <img src={iconURL} alt=\"icon\" width=\"80\" height=\"80\"/>\r\n        </div>\r\n    </div>\r\n\r\n)\r\n\r\nexport default CurrentDay;","import React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap  \r\n} from \"react-google-maps\";\r\n\r\nimport MarkerWithLabel from \"react-google-maps/lib/components/addons/MarkerWithLabel\";\r\n\r\n\r\nconst google = (window.google = window.google ? window.google : {});\r\n\r\nconst Map = ({ getInfo, lat, lng, cityName, country }) => (\r\n  <GoogleMap\r\n    onClick={getInfo}\r\n    defaultZoom={10.5}\r\n    center={{ lat: lat, lng: lng }}\r\n  >\r\n    <MarkerWithLabel\r\n      position={{ lat: lat, lng: lng }}\r\n      labelAnchor={new google.maps.Point(0, 0)}\r\n      labelStyle={{\r\n        fontSize: \"1.3rem\",\r\n        fontWeight: \"700\",\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        padding: \"0.3rem 0.5rem 0.2rem\",\r\n        borderRadius: \"30px\"\r\n      }}\r\n    >\r\n      <div>\r\n        {cityName ? cityName : \"Somewhere\"},{country ? country : \"Planet Earth\"}\r\n      </div>\r\n    </MarkerWithLabel>\r\n  </GoogleMap>\r\n);\r\n\r\nexport default withScriptjs(withGoogleMap(Map));","import React from 'react';\r\nimport Map from './Map/Map';\r\nimport style from './Tabs.module.css';\r\n\r\nconst TabToday = ({ current, getInfo, lat, lng, cityName, country }) => (\r\n    <div className={style.container}>\r\n        <div className={style.oneDay}>\r\n            <div className={style.containerOneDay}>\r\n                <h4>{current.condition.text}</h4>\r\n                <p>Temp: {current.temp_c} °</p>\r\n                <p>Wind: {current.wind_kph} km/h</p>\r\n                <p>Pressure: {current.pressure_in} mm Hd</p>\r\n                <p>Humidity: {current.humidity} %</p>\r\n                <p>Gust {current.gust_kph}km/h</p>\r\n                <img src={current.condition.icon} width=\"80\" height=\"80\" alt=\"icon\" />\r\n            </div>\r\n            <div className={style.containerMap} >\r\n                <Map\r\n                    getInfo={getInfo}\r\n                    lat={lat}\r\n                    lng={lng}\r\n                    cityName={cityName}\r\n                    country={country}\r\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEV5hm-_7AqHTdPCrmjbFLY1bQkvEGpK0\"\r\n                    loadingElement={<div style={{ height: `100%` }} />}\r\n                    containerElement={<div style={{ height: `22.5rem` }} />}\r\n                    mapElement={<div style={{ height: `100%` }} />}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default TabToday;","import React from 'react';\r\nimport style from './Tabs.module.css';\r\n\r\nconst TabMoreDays = ({forecastDays}) => (\r\n    <ul className={style.containerTabMoreDays}>\r\n    {forecastDays.map(item => (\r\n    <li key={item.date_epoch} className={style.itemTabMoreDays}>        \r\n            <h4>{item.day.condition.text}</h4>\r\n            <p>Date: {item.date}</p>\r\n            <p>Max temp: {item.day.maxtemp_c} °</p>\r\n            <p>Min temp: {item.day.mintemp_c} °</p>\r\n            <p>Sunrise: {item.astro.sunrise}</p>\r\n            <p>Sunset: {item.astro.sunset}</p>\r\n            <img src={item.day.condition.icon} width=\"80\" height=\"80\" alt=\"icon\"/>      \r\n    </li>)    \r\n    )}\r\n    </ul> \r\n)\r\n\r\nexport default TabMoreDays;","import React, { Component } from 'react';\r\nimport TabToday from './TabToday';\r\nimport TabMoreDays from './TabMoreDays';\r\nimport style from './Tabs.module.css';\r\n\r\n\r\nexport default class Tabs extends Component {\r\n\r\n    state = {\r\n        today: true,\r\n        moreDays: false,\r\n    }\r\n\r\n    openModeDays = () => {\r\n        this.setState({\r\n            today: false,\r\n            moreDays: true,\r\n        })\r\n    }\r\n\r\n    openToday = () => {\r\n        this.setState({\r\n            today: true,\r\n            moreDays: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { forecastDays, current,lat, lng, cityName,country, getInfo } = this.props;\r\n        const { today, moreDays } = this.state;\r\n\r\n        return (        \r\n            <div className={style.tabsContainer}>\r\n                <div >\r\n                    <button className={style.button} onClick={this.openToday}>Today</button>\r\n                    <button className={style.button} onClick={this.openModeDays}>Mode Days</button>\r\n                </div>\r\n                <div className={style.tabBlock}>\r\n                    {today && \r\n                    <TabToday  \r\n                        getInfo={getInfo} \r\n                        lat={lat} \r\n                        lng={lng} \r\n                        cityName={cityName} \r\n                        country={country}\r\n                        current={current}/>}\r\n                </div>\r\n                <div className={style.tabBlock}>\r\n                    {moreDays && \r\n                    <TabMoreDays \r\n                        forecastDays={forecastDays}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Search from './Search/Search';\r\nimport CurrentDay from './CurrentDay/CurrentDay';\r\nimport Tabs from './Tabs/Tabs';\r\nimport Loader from \"react-loader-spinner\";\r\nimport style from './App.module.css';\r\n\r\nconst IMAGE_KEY = `12292081-2c4297b94c6c783694a481445`;\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isLoading: true,\r\n    cityName: 'Kiev',\r\n    numForecastDay: 7,\r\n    value: '',\r\n    lng: 30.3,\r\n    lat: 50.5,\r\n    country: 'Ukraine'\r\n  }\r\n\r\n  updateWeather () {\r\n    \r\n    const { cityName, numForecastDay } = this.state;\r\n    const KEY = `3de754b0efc54c0cb3983448192204`;\r\n    const URL = `https://api.apixu.com/v1/forecast.json?key=${KEY}&q=${cityName}&days=${numForecastDay}`;\r\n    axios.get(URL)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          isLoading: false,\r\n          lat: data.location.lat,\r\n          lng: data.location.lon,\r\n          country: data.location.country,\r\n          temp_c: data.current.temp_c,\r\n          text: data.current.condition.text,\r\n          iconURL: data.current.condition.icon,\r\n          forecastDays: data.forecast.forecastday,\r\n          location: data.location,\r\n          current: data.current,\r\n        })\r\n      })\r\n\r\n      .catch(err => {\r\n        if (err) {\r\n          console.error('err')\r\n        }\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWeather();\r\n    this.searchImage();\r\n  }\r\n\r\n  cityNameUpdate = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.city.value);\r\n    this.setState ({\r\n      cityName: e.target.city.value,\r\n    }, () => this.updateWeather())\r\n  }\r\n\r\n  getInfoFromMapClick = (e) => {\r\n    let lat=e.latLng.lat();\r\n    let lng=e.latLng.lng();\r\n    console.log(lat, lng);\r\n\r\n    const { numForecastDay } = this.state;\r\n    const KEY = '3de754b0efc54c0cb3983448192204';\r\n    const URL = `https://api.apixu.com/v1/forecast.json?key=${KEY}&q=${lat},${lng}&days=${numForecastDay}`;\r\n    axios.get(URL)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          isLoading: false,\r\n          lat: data.location.lat,\r\n          lng: data.location.lon,\r\n          cityName:data.location.name,\r\n          country: data.location.country,\r\n          temp_c: data.current.temp_c,\r\n          text: data.current.condition.text,\r\n          iconURL: data.current.condition.icon,\r\n          forecastDays: data.forecast.forecastday,\r\n          location: data.location,\r\n          current: data.current,\r\n        })\r\n      })\r\n\r\n      .catch(err => {\r\n        if (err) {\r\n          console.error('err')\r\n        }\r\n      })\r\n  }\r\n\r\n  searchImage() {\r\n    const {cityName} = this.state;\r\n    const IMAGE_URL = `https://pixabay.com/api/?key=${IMAGE_KEY}&q=${cityName}`;\r\n    axios.get(IMAGE_URL)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      this.setState({\r\n        bgIMG: data.hits[1].largeImageURL\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isLoading, location, cityName, current, text, iconURL, forecastDays, lat, lng, country, bgIMG } = this.state;\r\n    console.log(this.state);\r\n    return (\r\n      <div className={style.bg} >\r\n      {/* style={{backgroundImage: `url(${bgIMG})`, backgroundSize: 'cover'}} */}\r\n        {isLoading ?\r\n          <div>\r\n            <div className={style.wrapLoader}>\r\n              <Loader \r\n                type=\"Circles\"\r\n                color=\"#00BFFF\"\r\n                height=\"100\"\t\r\n                width=\"100\"\r\n                margin=\"100px\"/>\r\n            </div>\r\n          </div> :\r\n          <div className={style.container} >\r\n            <div className={style.serchContainer}>\r\n              <Search getInput={this.cityNameUpdate} />\r\n              <CurrentDay location={location} text={text} iconURL={iconURL}/>\r\n            </div>\r\n            <Tabs \r\n              current={current} \r\n              forecastDays={forecastDays} \r\n              getInfo={this.getInfoFromMapClick} \r\n              lat={lat} \r\n              lng={lng} \r\n              cityName={cityName} \r\n              country={country}/>\r\n          </div>}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrentDay_container__veuKp\",\"oneDay\":\"CurrentDay_oneDay__273SA\"};"],"sourceRoot":""}